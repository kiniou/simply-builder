#!/usr/bin/python
import sys,os
from pprint import pprint
import subprocess
import argparse
import deb822
from string import Template
from datetime import datetime,timedelta
import shutil

from simplybuilderlib import config
from simplybuilderlib import chroot
from simplybuilderlib import builder
from simplybuilderlib import resolver



if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Simply build a .deb package in schroot",formatter_class=argparse.ArgumentDefaultsHelpFormatter)

    parser.add_argument('-a','--arch',metavar="ARCHITECTURE",help="What architecture to select",default="i386")
    parser.add_argument('-r','--release',help="What release to select",default="unstable")
    parser.add_argument('--keep-session',help="Weither to keep the chroot session after the build",action='store_true')
    parser.add_argument('-s','--session',help="the chroot session to use")
    parser.add_argument('file', help="specify the .dsc file to build")

    args = parser.parse_args()
    #print(args)

    o_config = config.SBConfig(args.arch, args.release, args.file)

    o_chroot = chroot.SBChroot(o_config)

    o_builder = builder.SBBuilder(o_config,o_chroot)

    o_resolver = resolver.SBResolver(o_config,o_chroot)


    start_time = datetime.now()

    o_chroot.begin_session(args.session)

    o_builder.prepare()

    retcode = o_resolver.install_satisfydepends()

    if ( not retcode ):
        ok = True
        if ok : ok = o_builder.copy_dsc_files()
        if ok : ok = o_builder.build()
        if ok : ok = o_builder.copy_result()

    else:
        print("E: Aptitude couldn't install the build dependencies")
        #subprocess.Popen(" ".join(schroot_cmd) + " --run-session -- aptitude why-not pbuilder-satisfydepends-dummy",cwd='/',shell=True).wait()

    if not args.keep_session : o_chroot.end_session()

    end_time=datetime.now()

    print(end_time-start_time)
